{{ range $srv := . }}
{{ if $srv.ForceSSLRedirect }}
server {
    listen    80;
    {{ if $srv.ServerName }}server_name    {{$srv.ServerName}};{{end}}

    rewrite ^ https://$http_host$request_uri? permanent;
}
{{ end }}
server {
    {{ if $srv.Listen }}listen    {{$srv.Listen}};{{ end }}
    {{ if $srv.Root }}root    {{$srv.Root}};{{ end }}
    {{ if $srv.ServerName }}server_name    {{$srv.ServerName}};{{end}}
	{{ if $srv.DefaultType }}default_type    {{$srv.DefaultType}};{{end}}
    {{ if $srv.Charset }}charset   {{$srv.Charset}};{{end}}

    {{ if gt $srv.KeepaliveTimeout.Num 0 }}
    keepalive_timeout {{$srv.KeepaliveTimeout.Num}}{{$srv.KeepaliveTimeout.Unit}};
    {{ end }}

    {{ if $srv.ServerTokens }}server_tokens on;{{ end }}

    {{ if $srv.SSLCertificate }}
    # ssl
    ssl_certificate {{$srv.SSLCertificate}};
    {{ end }}
    {{ if $srv.SSLCertificateKey }}ssl_certificate_key {{$srv.SSLCertificateKey}};{{ end }}

    {{ if $srv.ClientMaxBodySize.Unit }}
    client_max_body_size {{$srv.ClientMaxBodySize.Num}}{{$srv.ClientMaxBodySize.Unit}};
    {{ end }}
    {{ if $srv.ChunkedTransferEncoding }}
    chunked_transfer_encoding on;
    {{ end }}

    {{ range $rewrite := $srv.Rewrites }}
    rewrite {{$rewrite.Regex}} {{$rewrite.Replacement}}{{if $rewrite.Flag }} {{$rewrite.Flag}}{{ end }};
    {{ end }}

    {{ if ne $srv.Return.Code 0 }}
    return {{ $srv.Return.Code }} {{ if $srv.Return.Text}} "{{ $srv.Return.Text }}" {{ else if $srv.Return.URL }} {{$srv.Return.URL}} {{ end }};
    {{ end }}

    {{ if gt $srv.ProxyConnectTimeout.Num 0 }}
    proxy_connect_timeout   {{$srv.ProxyConnectTimeout.Num}}{{$srv.ProxyConnectTimeout.Unit}};
    {{ end }}
    {{ if gt $srv.ProxyTimeout.Num 0 }}
    proxy_timeout   {{$srv.ProxyTimeout.Num}}{{$srv.ProxyTimeout.Unit}};
    {{ end }}
    {{ if $srv.ProxyPass }}
    proxy_pass {{$srv.ProxyPass}};
    {{ end }}

    {{ range $loc := $srv.Locations }}
    location {{$loc.Path}} {
        {{ range $rewrite := $loc.Rewrites }}
        rewrite {{$rewrite.Regex}} {{$rewrite.Replacement}}{{if $rewrite.Flag }} {{$rewrite.Flag}}{{ end }};
        {{ end }}
        {{ range $psh := $loc.ProxySetHeaders }}
        proxy_set_header {{$psh.Field}} {{$psh.Value}};
        {{ end }}
        {{ if $loc.ProxyRedirect }}
        proxy_redirect {{$loc.ProxyRedirect}};
        {{ end }}
        {{ if gt $loc.ProxyConnectTimeout.Num 0 }}
        proxy_connect_timeout {{$loc.ProxyConnectTimeout.Num}}{{$loc.ProxyConnectTimeout.Unit}};
        {{ end }}
        {{ if gt $loc.ProxyReadTimeout.Num 0 }}
        proxy_read_timeout {{$loc.ProxyReadTimeout.Num}}{{$loc.ProxyReadTimeout.Unit}};
        {{ end }}
        {{ if gt $loc.ProxySendTimeout.Num 0 }}
        proxy_send_timeout {{$loc.ProxySendTimeout.Num}}{{$loc.ProxySendTimeout.Unit}};
        {{ end }}
        {{ if not $loc.DisableProxyPass }}
        set $target 'default';
        {{ buildLuaHeaderRouter $loc }}
        proxy_pass http://upstream_balancer;
        {{ end }}
        {{ if $loc.Return.Code }}
        return {{$loc.Return.Code}} {{$loc.Return.Text}} {{$loc.Return.URL}};
        {{ end }}
    }
    {{ end }}
}
{{ end }}